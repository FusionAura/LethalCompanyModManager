<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        JSM6LClGNjJNPThPPjlUQz5dS0RiT0hlUkpjUElhT0deTEVIPTpSRkJRREFLPz1CNjU8LytDNjJAMC1C
        MS4/LixFNDA4KCY3KCUtHh0lFhYcDg8XCQwZGhwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAABCLScdEA8yJCM6LClDMzBGNjJOPDdWRT9bSUNiT0hqV09rV1BqVk9nVE1lU0xeTUdV
        SUVVSERSRUJPQj9MPztENjJGNjJEMzBNOjdKODRJNzRKOTRFNDA5KSYsHRsiExQdDhAVCAoAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8KSYiFBMqGxlHNjNKOTVRPztdS0ReS0Rj
        UElsWFFwXFVvW1RuWlJtWlJsWVFjUk1cT0tXSUZXSUZTRkNPQkBLPDdNPThRPzpQPjpSPzpUQTxTQDpK
        NzJCMS0yIR8qGhomFRYhEBJSXGEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQ
        OjQhERIsGxkuIyZWRT9fTEdkUUtqVlBsWFFvW1NyX1dzXldxXVVyXlZVSEVUSkZeUExeUExcTkpVSEVN
        QD9RQTxUQj1ZRkBaR0FaRkFbR0FXQz9SPjpGMzA7KCcwHRwsGxovHh82JzkAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABJNC8lFhYwHx0bFx1UQj5gTUhmUkxtWlJwXFVzX1d0X1h3Ylt1
        X1lHPTpHPjxlV1NjVVBiU09fUU1bTUlZS0dKPDteSkRdSENhTEdeSkRhTUdfSkVaRUBKNjNGMjBBLi04
        JyY3JSMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzJCsdEhUmGRgcFxxK
        OzhiT0plUkxuWlNyXld0X1hxXVdfT0tSRkRcT0tnWVRmWFNmWFJlV1JkVVBgUk5dTktSREFGODZjTkln
        UkxiTkhmUEtpVE5eSUVTPjxTPTxLODdEMTGfiYMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAUAAAAAAAAAAAAAAAMjHiNCNzdIOjdLPTloVU9KPTwvKClAOThOQ0BZS0hkVlFlV1NnWFRo
        WVVoWFRoWVRlVlJjVFBbTUpKPTsnHR9vWVJoVE9vWlNsV1FhTUlaRkNTPz1POjtOOjoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABARIAAAEBAQIFAwUFAwQDBQsYFho3MDA2Ly4yKywzLCwz
        LCwxKSo2Ly5QRUJgUk5jVFBkVlFmWFNoWVVqW1ZrW1drW1dnV1JjU09XSUZFOTc6Ly9gTkp1XlhqVU9q
        VVBiTUpXREJWQkFNPUUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACScWZaRUAdFBYp
        HiEwJCYLCRIHChIVFBgSEhYICA8EBQsCBAoQDhI4MC9GPDpQREJdUExgUk5nWFRoWlVsXVduXVhsXVdt
        XVhoWFRiU09TRkNLPjw3Li0zKSlZSEVgS0hhTElWQkJHODlTRE4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC4jH6IaV85KipBNTQ7MC8AAQsBBA4QEBMQDhITERFDOjhxYl6RgHuBdG89NzcI
        BwoAAAAAAAABAAYAAAMoIiUxKitZTElaTUltXVlwX1toWFNfUE1MQD49MjEgGBoiGhwzKSovIydOQUFV
        RkdUREIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8b3NyZWY/MTJCNTUtJioCBA4TFBtY
        Skl3ZmOBcW2MenaQfnqRgHuTgn2WhH+SgXuNfXiAc256bmp/b2tfVVNaUFBdUVBCOjo2MDA2LjA+NTY/
        NzdaTUlWSERMPj1QQUBMPTxGODhWSUhOPkFUREJUREIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAhFRoxJCZENjdENjYXFBsAAwwuJyqAb22HdXKFdHCJd3OIcWt6X1ZyWlNyYlx/b2qGd3GOfXeRgXqQ
        gXyUhX+UhX+Vhn+XiIKaioSci4WYh4OZiYSTgXyCcGtWSUhANTZGOzlNPz1fUE9XR0hUREJUREJUREIA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARCxcxJSg+MTJLPj1PQT8ICBMEBg9uX1yAbWqEc2+FbmiDXlR5
        WVBqUElzVEtzVEpsUEdsU0tqVk96Z19/bmmQgnuUhoCVh4CUhH2QgXuOf3mJeXWQf3yZhoKRgHyPfnmL
        eHRQQ0FCNjVoWVZfUE5AMTJUREJUREIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWDhI0JylCNTVLPT1H
        OjsDBQ4qJSp5aGV9a2mAZFyCXlR3V01qT0dkSkJsUEhyVEtzVUtzVEtzU0pwUkhtUEZsUEdvU0pxWFCE
        YVeJZluKaF6NbmSPcmqMeXOOfnmRf3uQfnmHdnFlVlNfUE9mV1RUREJNPTxURELCqJfVuKQAAAAAAAAA
        AAAAAAAAAAAAAAAhFhY+MTJIOjpURkQ8MjMAAAdLQEB1Y2B2ZWGBX1d4Vk5vUElqTkdlSkNoTUVvUklv
        UUlwUkpwUkpuUUlwUkpzVUx2Vk16WU+EYFWLZVqTa16bcGOedGiacWeTdWyOe3WNfnqPfnt2ZWFjVFFp
        WVdeTktYSEZUREJUREKsm5AAAAAAAAAAAAAAAAAAAAAAAAAvIyJCNDVLPDxURENANjYHBxBhUU9xX1xw
        XVt7WVJwUElsT0dpTUVoTUVoTEVsT0dxU0pxU0t0VUx1Vkx1Vkx2V054WE98W1GBXlSKZluSa2Cacmac
        dGegd2uieGufeWuLdnCKenWEc25gUU9nV1VkVFBfT0xQPj5IODg3KS0AAAAAAAAAAAAAAAAAAAAAAAA0
        KCZENTZXSEdaS0kjHSIdGR1rWVZxXltxWlh4Vk54WFBzVU1rT0ZqT0ZwU0t1Vk12WE93Vk14WE92V052
        Vk16WVB9XFJ/XVODYFWLZluVbmKZcmabc2addWmgeGujeW2Zd22KeHGIdW5lV1NtXlpmVFFZR0ZTQkJK
        Ojs9MDQAAAAAAAAAAAAAAAAAAAAAAAA5LC1HNzlYSEdgT00lICYyKy11Y191ZF9xU053VU16WVBzVU1v
        UkpwUkt5WVB9W1J8W1F+XVN9XFJ/XVOCYFWCX1WCX1aFYliHZFmMaFyVbmKXcGSZcGSZc2addWiedWmb
        dWuKdW+Gc21uXlprW1hhUE5WRERPPj5PPkBCNTsAAAAAAAAAAAAAAAAAAAAAAABENjdJOjtdTUtoVlMq
        Jy0+NDZ3ZF9vXVp1VE55V09zUkt0VU1wUkl5WVCDYVeFYliIZFqIZVqHZFmJZVuKZluGY1iHZFmJZVqN
        aF2NaFyWb2OXb2OYcWSacmaZcmaXcGOIaWSHcWyEcWx2ZWFtXVpmVFJiUE9VRERQP0FGOEAAAAAAAAAA
        AAAAAAAAAAAAAAAvJiwoHR5ZSUlkVFEaGiNNRERyYlxsW1d3VU13Vk51VE1uUElsT0d9W1KFYliKZluQ
        al+Pal+Pal+NaV6NaV6Qa1+SbGGSbGCSbWGUbmKYcGSVbmKSbWGPal+SbWGRbGGQb2iFdG6BcWt6aGRr
        WlhjUU9gTUxYRkVHNzpUREIAAAAAAAAAAAAAAAAAAAAAAAC7r6Cll4mTeXBdTUwEBRNIPT1qW1ZqWVRz
        U0pzUkp3WE9uUEluUEiBXlWIZVqMZ1yTbWGZcWacdGicdGifdmmcdGebc2addGibc2eacmaZcWWXb2OV
        b2OUbmOSbWKXcWWMa2WAcGuAcWp5aWRoVlZpV1VZRkdUQkNJOTxUREIAAAAAAAAAAAAAAAAAAAAAAADT
        xbDezbeyrq9mVFMGBxFGOztcT0teTkprS0RuTkd0VU1uUUhzVEyDYFeKZluOaV6Wb2ScdGifd2qkem2k
        eW2jeW2ieWyhd2qfdmmddGeddGebc2eZcmaYcmeVcGOUb2SKamSEbWd/bWh4ZWJwXlxuXFleS0xWREVR
        QEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACNgn5oWVpkVFUICRZHOztOQ0A3LSxdQjxqTERvUUluUUl6
        WlGDYFaKZVuTbWOZcWafdmmhd2ule26le26keW2keWyhd2qhd2uhd2ugd2mcdWebc2iZc2eWcGWTbmOO
        bWN3Z2F8amV4ZmN0Yl9oVlRfTE1VREVQP0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ
        ECFPQkFEOzkdGRkOCQpALSpkSUFtUUl4WE+GY1iPaV+XcGScdGigd2qieWykem2me26le26keWyjeGuj
        emyjeWujeWygd2qfd2uedmqWcGWTbWOJaF5tX1tuX1t3ZmRyX11mVFNdTExNPj9aSUgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDilNQEJYS0hJPj0uJiYDAwMeFBNiSEB2V06DYFePal6Vb2OZ
        cmaddGiheGujeWyme26nfG6kem2me22nfW6ofW+mfG6le26hd2ygd2uXcWWTbGFmVVBdUE1uXlt0YmB0
        YmB0Xlw0MDNYWl8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIOzxUR0VVR0VS
        RUI+NDMOCwsPCwoxIyFSOzZ0VEyEYleUbmKbc2egeGqieWule22ke26le26mfG6kemynfG+ke22jeWyl
        emyecmWTal1sT0g8MzJbTUlzYl9zYmFzYGCxnJMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABCNDhPQEBbS0lhUU5bTkpNQD43Ly4tJyciHx8aFhYfGRkoHx5EMi5FNC5lSUFp
        TEN5WE+GY1eKZlqSa1+VbWGacmaMZltkSEBCLyolHBssJSRQQ0FpWFR6aGVxX1+Bbm+BcnQAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9LzJOPz9ZSEdnVlNzYF15ZmJ6aGN/
        bGd+bmiAcGqAb2mAbmd4Z2BoWFRUSEU2Li4kHyAQDxAKCQsQCw0FAgMHBAYAAAAJBwk6MDBgUE1mVFFy
        X1x4ZmR0YmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA+MTVHOTpXR0ZjUk9sWlZyX1p8aWWFcm6Ne3WTgHqVgXuXhX2XhX2WhH2Vg3uUgHmPfHWKd3CEcWp8
        aGN4ZmBxX1poWFRrW1Z7aWJ6ZmJ6aWZ+bWtzYmJvXV4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5KjNKOzxXRkVhT01rWld1Yl99amWHdG6PenWZhH6ch4Gg
        i4SijYajjYajjoeijYeijYagi4WdiYOdiIKbhoCYg36TfnmKd3KLeXWJdnN8amh5ZmZsWlwAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUREJOPj9ZSEdg
        TkxoVVNxX1x+ameEcGyOeXWXg32fioOhjYWkjYikj4ilj4ilj4ijjoijjoijj4ijjoiijYadiYOeiYSR
        gHyLe3eKd3N6Z2Z0YWFvXFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABXRURcS0plU1BoVVN4ZmJ/a2iLd3OSfXiXg32fiYKijYekjYelj4ijjYej
        jYijjYejjYejjYamkImijIaeiYSZhICTfnuFc3CDb218aWhwXV1rWWEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUREJgTk1kUVBrWFZ4ZWGBbmqP
        enaVgXuUf3qdh4GjjIajjoejjoeijIaijYeijIamj4mjjYaijIahi4WfiYSZhICWgX2KdXN/bGt2YmNw
        Xl8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAB2Y190YmB2Yl+CbWmNeXSVgHuXgXugioOii4WjjYeijIajjYiljomfioSkjYajjYek
        joijjIedh4KXgn6PeneDb218aGh2Y2V4ZGMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACGdGuDcG+QfXmXgn2ZhH+fiYOh
        i4WhjIagioShi4WijIaijIajjIajjoegi4aZhYGbhYGVgX2Pe3iCcG+Cbm19aWgAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A
        AAAAAAAAAAAAAACQfXmchoWeiYSijIafiYOhjIajjYijjYemj4qijIehioWeh4OYhIGYhYGRfXuRfnuL
        eXeMeHWEcXUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///////////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACfiYOumZWxmo+ql4yw
        m4+jjoqjkIqnkoamjoSljoOeiYCijIKfiYMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///AAP/8AAP/+AAAP/wAA//wAAAP/AAD/+AAAAf8AAP/4AAAB/wAA//gAAAH/
        AAD/8AAAAf8AAP/gAAAB/wAA/+AAAAD/AAD/wAAAAP8AAP4AAAAA/wAA/gAAAAB/AAD+AAAAAH8AAP4A
        AAAAPwAA/gAAAAA/AAD+AAAAAH8AAP4AAAAAfwAA+AAAAAD/AADwAAAAAP8AAPAAAAAA/wAA8AAAAAB/
        AADwAAAAAD8AAPAAAAAAHwAA4AAAAAAfAADgAAAAAAcAAOAAAAAABwAA4AAAAAAHAADgAAAAAAcAAOAA
        AAAABwAA4AAAAAAHAADgAAAAAAcAAOAAAAAABwAA4AAAAAAPAADwAAAAAA8AAP4AAAAADwAA/gAAAAAf
        AAD/AAAAAH8AAP8AAAAAfwAA/wAAAAP/AAD/AAAAA/8AAP8AAAAH/wAA/wAAAAf/AAD/gAAAB/8AAP+A
        AAAP/wAA/+AAAA//AAD/+AAAH/8AAP/eAAA//wAA8f/gAP//AAA=
</value>
  </data>
</root>